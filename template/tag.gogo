package {{ .Package.Name }}

// Code generated by {{ .Generator }} with {{ .GoVersion }} DO NOT EDIT

{{ with .File }}
{{   range ( .TypeDecls.WithTag "tag" ) }}
{{     if .Type.IsMap }}
func (m {{ .Name }}) WithTagValue(key, value string) {{ .Name }} {
	return m.Filter(func(_name {{ .Type.Key }}, item {{ .Type.Value }}) bool {
		tags := item.Tags()
		v, found := tags[key]

		return found && v == value
	})
}

func (m {{ .Name }}) WithTag(key string) {{ .Name }} {
	return m.Filter(func(_name {{ .Type.Key }}, item {{ .Type.Value }}) bool {
		tags := item.Tags()
		_, found := tags[key]

		return found
	})
}

func (m {{ .Name }}) WithoutTag(key string) {{ .Name }} {
	return m.Filter(func(_name {{ .Type.Key }}, item {{ .Type.Value }}) bool {
		tags := item.Tags()
		_, found := tags[key]

		return !found
	})
}
{{     end}}
{{   end }}
{{ end }}
