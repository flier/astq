package query

// Code generated by astgen DO NOT EDIT

// Keys returns a new slice containing the set of map keys. The order is unspecified.
func (m FieldMap) Keys() (keys []string) {
	for name := range m {
		keys = append(keys, name)
	}

	return
}

// Keys returns a new slice containing the set of map keys. The order is unspecified.
func (m FileMap) Keys() (keys []string) {
	for name := range m {
		keys = append(keys, name)
	}

	return
}

// Keys returns a new slice containing the set of map keys. The order is unspecified.
func (m InterfaceMap) Keys() (keys []string) {
	for name := range m {
		keys = append(keys, name)
	}

	return
}

// Keys returns a new slice containing the set of map keys. The order is unspecified.
func (m MethodMap) Keys() (keys []string) {
	for name := range m {
		keys = append(keys, name)
	}

	return
}

// Keys returns a new slice containing the set of map keys. The order is unspecified.
func (m Packages) Keys() (keys []string) {
	for name := range m {
		keys = append(keys, name)
	}

	return
}

// Keys returns a new slice containing the set of map keys. The order is unspecified.
func (m StructMap) Keys() (keys []string) {
	for name := range m {
		keys = append(keys, name)
	}

	return
}

// Keys returns a new slice containing the set of map keys. The order is unspecified.
func (m Tags) Keys() (keys []string) {
	for name := range m {
		keys = append(keys, name)
	}

	return
}

// Keys returns a new slice containing the set of map keys. The order is unspecified.
func (m TypeMap) Keys() (keys []string) {
	for name := range m {
		keys = append(keys, name)
	}

	return
}
